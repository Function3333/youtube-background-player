name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps: 
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2
     
      - name: Setting environment variables
        run: |
          echo "AWS_DEFAULT_REGION=ap-northeast-2" >> $GITHUB_ENV
          echo "AWS_SG_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV  
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2



  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
  #   - name: Setup Gradle
  #     uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

  #   - name: Create directory for properties file
  #     run: mkdir -p src/main/resources
    
  #   - name: Create properties file from secrets
  #     run: |
  #       echo "${{ secrets.APPLICATION_PROPERTIES }}" >> src/main/resources/application.properties
  #       echo "${{ secrets.CONFIG_PROPERTIES }}" >> src/main/resources/config.properties
        
  #   - name: Build with Gradle Wrapper
  #     run: ./gradlew build -x test

  #   # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
  #   # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
  #   #
  #   # - name: Setup Gradle
  #   #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
  #   #   with:
  #   #     gradle-version: '8.5'
  #   #
  #   # - name: Build with Gradle 8.5
  #   #   run: gradle build

  # dependency-submission:

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
