plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.rest'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}



repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//aws
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.566'
	testImplementation group: 'software.amazon.awssdk', name: 's3', version: '2.26.29'

	//queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//javaMail
	implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
	developmentOnly("org.springframework.boot:spring-boot-devtools")

	//jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	//httpClient
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

	//json
	implementation group: 'org.json', name: 'json', version: '20231013'

	//hasing password
	implementation group: 'com.password4j', name: 'password4j', version: '1.8.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
